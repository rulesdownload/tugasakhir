apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o compose.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
      name: mysql
    spec:
      ports:
        - name: "3336"
          port: 3336
          targetPort: 3306
      selector:
        io.kompose.service: mysql
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o compose.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
      name: nginx
    spec:
      ports:
        - name: "9080"
          port: 9080
          targetPort: 90
      selector:
        io.kompose.service: nginx
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o compose.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
      name: mysql
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mysql
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o compose.yaml
            kompose.version: 1.27.0 (b0ed6a2c9)
          creationTimestamp: null
          labels:
            io.kompose.network/sail: "true"
            io.kompose.service: mysql
        spec:
          containers:
            - env:
                - name: MYSQL_ALLOW_EMPTY_PASSWORD
                  value: "1"
                - name: MYSQL_DATABASE
                - name: MYSQL_PASSWORD
                - name: MYSQL_ROOT_HOST
                  value: '%'
                - name: MYSQL_ROOT_PASSWORD
                - name: MYSQL_USER
              image: mysql/mysql-server:8.0
              livenessProbe:
                exec:
                  command:
                    - mysqladmin
                    - ping
                    - -p
                failureThreshold: 3
                timeoutSeconds: 5
              name: mysql
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/mysql
                  name: sail-mysql
                - mountPath: /docker-entrypoint-initdb.d/10-create-testing-database.sh
                  name: mysql-claim1
          restartPolicy: Always
          volumes:
            - name: sail-mysql
              persistentVolumeClaim:
                claimName: sail-mysql
            - name: mysql-claim1
              persistentVolumeClaim:
                claimName: mysql-claim1
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: sail-mysql
      name: sail-mysql
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mysql-claim1
      name: mysql-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: sail
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/sail: "true"
      podSelector:
        matchLabels:
          io.kompose.network/sail: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o compose.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
      name: nginx
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: nginx
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o compose.yaml
            kompose.version: 1.27.0 (b0ed6a2c9)
          creationTimestamp: null
          labels:
            io.kompose.network/sail: "true"
            io.kompose.service: nginx
        spec:
          containers:
            - env:
                - name: NGINX_HOST
                  value: example.lapor
                - name: NGINX_PORT
                  value: "90"
              image: nginx
              name: nginx
              ports:
                - containerPort: 90
              resources: {}
              volumeMounts:
                - mountPath: /var/www/
                  name: nginx-claim0
                - mountPath: /etc/nginx/templates
                  name: nginx-claim1
          restartPolicy: Always
          volumes:
            - name: nginx-claim0
              persistentVolumeClaim:
                claimName: nginx-claim0
            - name: nginx-claim1
              persistentVolumeClaim:
                claimName: nginx-claim1
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nginx-claim0
      name: nginx-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nginx-claim1
      name: nginx-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o compose.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: php-fpm
      name: php-fpm
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: php-fpm
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o compose.yaml
            kompose.version: 1.27.0 (b0ed6a2c9)
          creationTimestamp: null
          labels:
            io.kompose.network/sail: "true"
            io.kompose.service: php-fpm
        spec:
          containers:
            - env:
                - name: XDEBUG
                  value: "TRUE"
              image: cyberduck/php-fpm-laravel:8.1
              name: php-fpm
              resources: {}
              volumeMounts:
                - mountPath: /var/www
                  name: php-fpm-claim0
          restartPolicy: Always
          volumes:
            - name: php-fpm-claim0
              persistentVolumeClaim:
                claimName: php-fpm-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: php-fpm-claim0
      name: php-fpm-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

